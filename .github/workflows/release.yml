name: Release

on:
  workflow_dispatch:         # Manual trigger for stable releases
  schedule:
    - cron: '0 3 * * 1'      # Weekly preview release (every Monday at 3 AM UTC)

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Go Changes Since Last Release
    runs-on: ubuntu-latest
    outputs:
      go_changed: ${{ steps.go_diff.outputs.any_changed }}
      latest_tag: ${{ steps.latest_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v5

      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Get latest release tag
        id: latest_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Compare Go files against latest release
        uses: tj-actions/changed-files@v47.0.0
        id: go_diff
        with:
          base_sha: ${{ steps.latest_tag.outputs.tag }}
          files: "**.go"

  release:
    name: Create Release
    needs: detect-changes
    if: |
      (
        github.event_name != 'schedule'
      ) || (
        github.event_name == 'schedule' &&
        needs.detect-changes.outputs.go_changed == 'true'
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set release type and tag
        id: release_meta
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            UNRELEASED_VERSION="$(cat VERSION)  # Replace with logic to compute next version if needed
            TAG="${UNRELEASED_VERSION}-preview$(date +'%Y%m%d')"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "name=Weekly Preview Release" >> $GITHUB_OUTPUT
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            TAG="${GITHUB_REF#refs/tags/}"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "name=Stable Release $TAG" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Replace {unreleased} in .go files
        if: ${{ steps.release_meta.outputs.prerelease == 'false' }}
        run: |
          find . -name "*.go" -type f -exec sed -i "s/{unreleased}/${{ env.VERSION }}/g" {} \;

      - name: Update Changelog
        if: ${{ steps.release_meta.outputs.prerelease == 'false' }}
        run: |
          sed -i "s/Unreleased/${{ env.VERSION }}/g" changelog.md
          sed -i "s#(\(dd/mm/yyyy\))#\($(date +'%d/%m/%Y')\)#g" changelog.md
          perl -0777 -i -pe 's/### (Added|Changed|Deprecated|Removed|Fixed)\s*(?=###|##)//gs' changelog.md

      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{env.VERSION}}"
          message: "v${{env.VERSION}}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          name: ${{ steps.release_meta.outputs.name }}
          prerelease: ${{ steps.release_meta.outputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Remove header
        if: ${{ steps.release_meta.outputs.prerelease == 'false' }}
        run: |
          awk '/##/{flag=1} flag' changelog.md > temp && mv temp changelog.md

      - name: Add Unreleased section to CHANGELOG.md
        if: ${{ steps.release_meta.outputs.prerelease == 'false' }}
        run: |
          echo -e "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased] - (dd/mm/yyyy)\n\n### Added\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n$(cat changelog.md)" > changelog.md

      - name: Push updates
        if: ${{ steps.release_meta.outputs.prerelease == 'false' }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Update version and CHANGELOG.md for release"
          git push