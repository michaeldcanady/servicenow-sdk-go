name: Create GitHub release
on:
  workflow_dispatch:

env:
  VERSION:

jobs:
  create_stable_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Get Version
        id: get_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Replace {unreleased} in .go files
        run: |
          find . -name "*.go" -type f -exec sed -i "s/{unreleased}/${{ env.VERSION }}/g" {} \;

      - name: Update Changelog
        run: |
          sed -i "s/Unreleased/${{ env.VERSION }}/g" changelog.md
          sed -i "s#(\(dd/mm/yyyy\))#\($(date +'%d/%m/%Y')\)#g" changelog.md
          perl -0777 -i -pe 's/### (Added|Changed|Deprecated|Removed|Fixed)\s*(?=###|##)//gs' changelog.md

      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{env.VERSION}}"
          message: "v${{env.VERSION}}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          automatic_release_tag: "v${{env.VERSION}}"
          title: Release v${{env.VERSION}}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            changelog.md

      - name: Remove header
        run: |
          awk '/##/{flag=1} flag' changelog.md > temp && mv temp changelog.md

      - name: Add Unreleased section to CHANGELOG.md
        run: |
          echo -e "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased] - (dd/mm/yyyy)\n\n### Added\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n$(cat changelog.md)" > changelog.md

      - name: Push updates
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Update version and CHANGELOG.md for release"
          git push
