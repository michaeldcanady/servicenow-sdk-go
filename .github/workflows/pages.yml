name: Documentation CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/pages.yml"
  pull_request:
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/pages.yml"


env:
  PYTHON_VERSION: "3.x"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  changes-docs:
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Changed Files
        uses: tj-actions/changed-files@v47.0.0
        id: filter
        with:
          files: |
            docs/**
            mkdocs.yml
            .github/workflows/pages.yml

  build:
    name: build-md
    runs-on: ubuntu-latest
    if: ${{ needs.changes-docs.outputs.docs == 'true' }}
    needs:
      - changes-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Restore site cache
        id: site-cache
        uses: actions/cache@v3
        with:
          continue-on-error: true
          path: site
          key: site-${{ github.sha }}
          restore-keys: |
            site-

      - name: Set up Python
        uses: actions/setup-python@v4
        if: steps.site-cache.outputs.cache-hit != 'true'
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install system dependencies
        if: steps.site-cache.outputs.cache-hit != 'true'
        run: sudo apt-get install -y pngquant

      - name: Install Python dependencies
        if: steps.site-cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - name: Build docs
        if: steps.site-cache.outputs.cache-hit != 'true'
        run: mkdocs build --strict
      
      - name: Cache built site
        if: steps.site-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: site
          key: site-${{ github.sha }}
      
      - name: Upload site artifact
        uses: actions/upload-artifact@v5.0.0
        with:
          name: site
          path: site

  lint:
    name: lint-md
    runs-on: ubuntu-latest
    if: ${{ needs.changes-docs.outputs.docs == 'true' }}
    needs:
      - changes-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Vale Linter
        uses: errata-ai/vale-action@v2.1.1
        with:
          fail_on_error: true
          files: docs

  deploy:
    name: deploy-docs
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: pip install -r requirements.txt
      
      - name: Download site artifact
        uses: actions/download-artifact@v6.0.0
        with:
          name: site
          path: site

      - name: Deploy to GitHub Pages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mkdocs gh-deploy --force --config-file mkdocs.yml --site-dir site
