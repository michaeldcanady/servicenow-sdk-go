{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#whats-service-now-sdk-for-go","title":"What's Service-Now SDK for Go?","text":"<p>Service-Now SDK for Go is a thin golang sdk for the Service-Now REST apis. It leverages the functionality and flexibility of Kiota modules (we don't use the Kiota CLI as Service-Now's OpenAPI spec, if it exists at all, isn't public).</p>"},{"location":"#why-service-now-sdk-for-go","title":"Why Service-Now SDK for Go?","text":"<p>Have to write your own SDK - or worse having to manage REST calls by hand - can be tedious and cumbersome. The goal of this project is to make that process easy and intuitive so you can get back to what you enjoy working on your projects!</p>"},{"location":"#how-to-use","title":"How to use","text":"<p>This SDK has two modalities of usage: <code>fluent</code> and <code>standard</code>.</p> <p>The following block is the base you'll need for all implementation methods: <pre><code>import (\n    \"github.com/michaeldcanady/servicenow-sdk-go/credentials\"\n)\n\ncred := credentials.NewUsernamePasswordCredential(\"username\", \"password\")\n\nclient := servicenowsdkgo.NewServiceNowClient2(cred, \"instance\")\n</code></pre></p> <p>Make API requests, this is done one of two ways via the fluent or standard implementation.</p> <p>It's recommended to use the fluent implementation, whose design takes ease of use and simplicity in mind.</p> FluentStandard Table api<pre><code>client.Now2().Table2(\"table_name\")\n</code></pre> Attachment api<pre><code>client.Now2().Attachment2()\n</code></pre> Batch api<pre><code>client.Now2().Batch()\n</code></pre> Table api<pre><code>pathParameters := map[string]string{\n    \"baseurl\": \"https://www.{instance}.service-now.com/api/now\",\n    \"table\":   \"incident\",\n}\n\nrequestBuilder := tableapi.NewTableRequestBuilder2(client, pathParameters)\n</code></pre>"},{"location":"#development-status","title":"Development status","text":"<p>Service-Now SDK for Go is being actively developed by the community.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#requirements","title":"Requirements","text":"<ul> <li>Installed golang 1.23+.</li> <li>Active Service-Now instance or developer instance.</li> </ul>"},{"location":"getting-started/#1-install-service-now-sdk-for-go","title":"1. Install Service-Now SDK for Go","text":"Install the latestInstall a specific version <pre><code>go get github.com/michaeldcanady/servicenow-sdk-go@latest\n</code></pre> <pre><code>go get github.com/michaeldcanady/servicenow-sdk-go@{version}\n</code></pre>"},{"location":"getting-started/#2-create-a-credential","title":"2. Create a credential","text":"<pre><code>package main\n\nimport (\n    \"github.com/michaeldcanady/servicenow-sdk-go/credentials\"\n    servicenowsdkgo \"github.com/michaeldcanady/servicenow-sdk-go\"\n)\n\nfunc main() {\n    // instantiates a basic authentication username/password credential but you can use any from the `credentials` submodule or implement your own!\n    cred := credentials.NewUsernamePasswordCredential(\"{username}\", \"{password}\")\n    ...\n}\n</code></pre>"},{"location":"getting-started/#3-create-a-service-now-client","title":"3. Create a Service-Now client","text":"<pre><code>    ...\n    client := servicenowsdkgo.NewServiceNowClient(cred, \"{instance}\")\n    ...\n</code></pre>"},{"location":"getting-started/#4-review-specific-api-documentation","title":"4. Review specific api documentation","text":"<p>With the <code>client</code> object initialized, implementation of the full capabilities offered by the Service-Now SDK for Go can begin. Refer to apis for details on implementing specific APIs.</p>"},{"location":"how-to-use/","title":"How to use","text":"<p>This SDK has two modalities of usage: <code>fluent</code> and <code>standard</code>.</p> <p>The following block is the base you'll need for all implementation methods: <pre><code>import (\n    \"github.com/michaeldcanady/servicenow-sdk-go/credentials\"\n)\n\ncred := credentials.NewUsernamePasswordCredential(\"username\", \"password\")\n\nclient := servicenowsdkgo.NewServiceNowClient2(cred, \"instance\")\n</code></pre></p>"},{"location":"how-to-use/#fluent","title":"Fluent","text":"<p>The fluent implementation is designed for ease of use and more simplistic implementations. </p> Table API<pre><code>client.Now().Table(\"table_name\")\n</code></pre> Attachment API<pre><code>client.Now().Attachment2()\n</code></pre> Batch API<pre><code>client.Now().Batch()\n</code></pre>"},{"location":"how-to-use/#standard","title":"Standard","text":""},{"location":"template/","title":"{Action} {object type}","text":""},{"location":"template/#overview","title":"Overview","text":""},{"location":"template/#path-parameters","title":"Path parameters","text":"Name Description"},{"location":"template/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description"},{"location":"template/#required-query-parameters","title":"Required query parameters","text":"Name Type Possible values Description"},{"location":"template/#examples","title":"Examples","text":""},{"location":"apis/","title":"Overview","text":"<p>This section provides implementation guidance for each supported API in the SDK. Each SDK submodule corresponds to a Service-Now REST API of the same name. For example, the <code>table-api</code> submodule wraps the Table REST API.</p> <p>To ensure clarity and maintainability:</p> <ul> <li>Internal consistency within each submodule takes precedence.</li> <li>Cross-module consistency remains a broader goal (but may vary for specific reasons).</li> </ul> <p>Each subsection includes examples and usage patterns tailored to the specific API it supports.</p>"},{"location":"apis/attachment/","title":"Overview","text":"<p>The Attachment api provides endpoints that allows you to upload and query file attachments. You can upload or retrieve a single file with each request.</p>"},{"location":"apis/attachment/delete/","title":"Delete attachment","text":""},{"location":"apis/attachment/delete/#overview","title":"Overview","text":"<p>Delete specific attachment using the sys id.</p>"},{"location":"apis/attachment/delete/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/delete/#optional-query-parameters","title":"Optional query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/delete/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/delete/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    config := &amp;attachmentapi.AttachmentItemRequestBuilderDeleteRequestConfiguration{\n        // Optional configurations\n    }\n\n    err := client.Now2().Attachment2().ByID(\"{sys_id}\").Delete(context.Background(), config)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/attachment/get/","title":"Get attachment","text":""},{"location":"apis/attachment/get/#overview","title":"Overview","text":"<p>Retrieve specific attachment metadata using the sys id.</p>"},{"location":"apis/attachment/get/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/get/#optional-query-parameters","title":"Optional query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/get/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/get/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    config := &amp;attachmentapi.AttachmentItemRequestBuilderGetRequestConfiguration{\n        // Optional configurations\n    }\n\n    response, err := client.Now2().Attachment2().ByID(\"{sys_id}\").Get(context.Background(), config)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/attachment/list/","title":"List attachments","text":""},{"location":"apis/attachment/list/#overview","title":"Overview","text":"<p>Returns the metadata for multiple attachments.</p>"},{"location":"apis/attachment/list/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/list/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>SysParmLimit</code> <code>int</code> N/A Maximum number of records to return. <code>SysParmOffset</code> <code>int</code> N/A Starting record index for which to begin retrieving records. <code>SysParmQuery</code> <code>string</code> N/A Encoded query used to filter the result set."},{"location":"apis/attachment/list/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/list/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    config := &amp;attachmentapi.AttachmentRequestBuilder2GetRequestConfiguration{\n       // Optional configurations\n    }\n\n    response, err := client.Now2().Attachment2().Get(context.Background(), config)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/attachment/file/","title":"Overview","text":""},{"location":"apis/attachment/file/create/","title":"Create attachment file","text":""},{"location":"apis/attachment/file/create/#overview","title":"Overview","text":"<p>Upload file of any supported content type. Requires you to provide the table sys id, table name, and file name via the request headers.</p>"},{"location":"apis/attachment/file/create/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/file/create/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>EncryptionContext</code> <code>*string</code> N/A <code>sys_id</code> of an encryption context record."},{"location":"apis/attachment/file/create/#required-query-parameters","title":"Required query parameters","text":"Name Type Possible values Description <code>FileName</code> <code>*string</code> N/A Name to provided file. <code>TableName</code> <code>*string</code> N/A Name of the designated table which contains the record to attach the file to. <code>TableSysID</code> <code>*string</code> N/A Specifies the <code>sys_id</code> of the record in the designated table to attach the file to."},{"location":"apis/attachment/file/create/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    //build media type\n    dataContentType := \"text/plain\"\n    data := []byte(\"this is example data\")\n    media := attachmentapi.NewMedia(dataContentType, data)\n\n    config := &amp;attachmentapi.AttachmentFileRequestBuilderPostRequestConfiguration{\n        QueryParameters: &amp;attachmentapi.AttachmentFileRequestBuilderPostQueryParameters{\n            TableSysID: \"INC00000001\", // required\n            TableName:  \"incident\", // required\n            FileName:   \"example.txt\", // required\n        }\n        // Optional configurations\n    }\n\n    response, err := client.Now2().Attachment2().File().Post(context.Background(), media, config)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/attachment/file/get/","title":"Get attachment file","text":""},{"location":"apis/attachment/file/get/#overview","title":"Overview","text":"<p>Retrieves an attachment's file by sys id.</p>"},{"location":"apis/attachment/file/get/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/file/get/#optional-query-parameters","title":"Optional query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/file/get/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/file/get/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    config := &amp;attachmentapi.AttachmentItemRequestBuilderGetRequestConfiguration{\n        // Optional configurations\n    }\n\n    response, err := client.Now().Attachment2().ByID(\"{sys_id}\").Get(context.Background(), config)\n    if err != nil {\n        panic(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/attachment/upload/","title":"Overview","text":""},{"location":"apis/attachment/upload/create/","title":"Create attachment file","text":""},{"location":"apis/attachment/upload/create/#overview","title":"Overview","text":"<p>Upload file of any supported content type. Requires you to provide the table sys id, table name, and file name via the multipart form.</p>"},{"location":"apis/attachment/upload/create/#path-parameters","title":"Path parameters","text":"<p>N/A - doesn't support standard implementation.</p>"},{"location":"apis/attachment/upload/create/#optional-query-parameters","title":"Optional query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/upload/create/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/attachment/upload/create/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    \"context\"\n\n    attachmentapi \"github.com/michaeldcanady/servicenow-sdk-go/attachment-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    body := // TODO: how to make multipart body?\n\n    config := &amp;attachmentapi.AttachmentUploadRequestBuilderPostRequestConfiguration{\n        // Optional configurations\n    }\n\n    response, err := client.Now2().Attachment2().Upload().Post(context.Background(), body, config)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/batch/","title":"Overview","text":"<p>The <code>Batch api</code> provides an endpoint for submitting a batch of <code>REST</code> requests.</p>"},{"location":"apis/batch/create/","title":"Create batch request","text":""},{"location":"apis/batch/create/#overview","title":"Overview","text":"<p>Submits a <code>BatchRequest</code> containing all desired requests.</p>"},{"location":"apis/batch/create/#path-parameters","title":"Path parameters","text":"<p>N/A</p>"},{"location":"apis/batch/create/#optional-query-parameters","title":"Optional query parameters","text":"<p>N/A</p>"},{"location":"apis/batch/create/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/batch/create/#examples","title":"Examples","text":"Fluent <pre><code>package main\n\nimport (\n    context\n\n    batchapi \"github.com/michaeldcanady/servicenow-sdk-go/batch-api\"\n)\n\n// batchRequests A helper function to combine provided request information into a single `BatchRequest`.\nfunc batchRequests(excludeResponseHeaders bool, requests ...*abstractions.RequestInformation) (*batchapi.BatchRequestModel, error) {\n    body := batchapi.NewBatchRequestModel()\n    for _, request := range requests {\n        restRequest, err := batchapi.CreateRestRequestFromRequestInformation(request, excludeResponseHeaders)\n        if err != nil {\n            return nil, err\n        }\n        if err := body.AddRequest(restRequest); err != nil {\n            return nil, err\n        }\n    }\n    return body, nil\n}\n\nfunc main() {\n    // Initialize credentials and client\n\n    // Build requests, using ToXXXRequestInformation method\n\n    body := batchRequests(true, ...requests)\n\n    // build your request\n    response, err := client.Now().Batch().Post(context.Backgroud(), body)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/tables/","title":"Overview","text":"<p>The Table API enables create, read, update, and delete (CRUD) operations on ServiceNow tables. Each endpoint corresponds to a specific operation and supports both fluent and standard usage patterns.</p>"},{"location":"apis/tables/create/","title":"Create table record","text":""},{"location":"apis/tables/create/#overview","title":"Overview","text":"<p>Creates a single record in the specified table.</p> <p>Note: This endpoint doesn't support bulk insertion.</p>"},{"location":"apis/tables/create/#path-parameters","title":"Path parameters","text":"Name Description <code>baseurl</code> The absolute base URI for the request (this is the same for all requests) including: the schema, the domain, and a path fragment. <code>table</code> The table name of for the operation."},{"location":"apis/tables/create/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>DisplayValue</code> <code>tableapi.DisplayValue</code> <code>TRUE</code>, <code>FALSE</code>, or <code>ALL</code> Determines the type of data returned, either the actual values from the database or the display values of the fields. <code>ExcludeReferenceLink</code> <code>bool</code> N/A Flag that indicates whether to exclude Table API links for reference fields. <code>Fields</code> <code>[]string</code> N/A List of fields to include in the response. <code>InputDisplayValue</code> <code>bool</code> N/A Flag that indicates whether to set field values using the display value or the actual value. <code>View</code> <code>tableapi.View</code> <code>DESKTOP</code>, <code>MOBILE</code>, or <code>BOTH</code> UI view for which to render the data."},{"location":"apis/tables/create/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/tables/create/#examples","title":"Examples","text":"FluentStandard <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    params := &amp;tableapi.TableRequestBuilderPostQueryParameters{\n        // Optional configurations\n    }\n\n    data := map[string]string{\n        \"short_description\": \"example incident\",\n        \"description\":       \"incident created by servicenow-sdk-go\",\n    }\n\n    response, err := client.Now2().Table2(\"{TableName}\").Post4(context.Background(), data, params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre> <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    pathParameters := map[string]string{\n        \"baseurl\": \"https://www.{instance}.service-now.com/api/now\",\n        \"table\":   \"incident\",\n    }\n\n    requestBuilder := tableapi.NewTableRequestBuilder2(client, pathParameters)\n\n    params := &amp;tableapi.TableRequestBuilderPostQueryParameters{\n        // Optional configurations\n    }\n\n    data := map[string]string{\n        \"short_description\": \"example incident\",\n        \"description\":       \"incident created by servicenow-sdk-go\",\n    }\n\n    response, err := requestBuilder.Post4(context.Background(), data, params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/tables/delete/","title":"Delete table record","text":""},{"location":"apis/tables/delete/#overview","title":"Overview","text":"<p>Deletes the specified record from the table.</p>"},{"location":"apis/tables/delete/#path-parameters","title":"Path parameters","text":"Name Description <code>baseurl</code> The absolute base URI for the request (this is the same for all requests) including: the schema, the domain, and a path fragment. <code>table</code> The table name of for the operation. <code>sysId</code> The sys id of the table record."},{"location":"apis/tables/delete/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>QueryNoDomain</code> <code>bool</code> N/A Flag that indicates whether to restrict the record search to only the domains configured for the logged in user."},{"location":"apis/tables/delete/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/tables/delete/#examples","title":"Examples","text":"FluentStandard <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    params := &amp;tableapi.TableItemRequestBuilderDeleteQueryParameters{\n        // Optional configurations\n    }\n\n    err := client.Now2().Table2(\"{TableName}\").ByID(\"{sysID}\").Delete2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process result\n}\n</code></pre> <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    pathParameters := map[string]string{\n        \"baseurl\": \"https://www.{instance}.service-now.com/api/now\",\n        \"table\":   \"incident\",\n        \"sysId\":   \"INC00000000\",\n    }\n\n    requestBuilder := tableapi.NewTableItemRequestBuilder2(client, pathParameters)\n\n    params := &amp;tableapi.TableItemRequestBuilderDeleteQueryParameters{\n        // Optional configurations\n    }\n\n    err := requestBuilder.Delete2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process result\n}\n</code></pre>"},{"location":"apis/tables/get/","title":"Get table record","text":""},{"location":"apis/tables/get/#overview","title":"Overview","text":"<p>Retrieves a specific record by <code>sys_id</code> from the specified table.</p>"},{"location":"apis/tables/get/#path-parameters","title":"Path parameters","text":"Name Description <code>baseurl</code> The absolute base URI for the request (this is the same for all requests) including: the schema, the domain, and a path fragment. <code>table</code> The table name of for the operation. <code>sysId</code> The sys id of the table record."},{"location":"apis/tables/get/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>DisplayValue</code> <code>tableapi.DisplayValue</code> <code>TRUE</code>, <code>FALSE</code>, or <code>ALL</code> Determines the type of data returned, either the actual values from the database or the display values of the fields. <code>ExcludeReferenceLink</code> <code>bool</code> N/A Flag that indicates whether to exclude Table API links for reference fields. <code>Fields</code> <code>[]string</code> N/A List of fields to include in the response. <code>QueryNoDomain</code> <code>bool</code> N/A Flag that indicates whether to restrict the record search to only the domains configured for the logged in user. <code>View</code> <code>tableapi.View</code> <code>DESKTOP</code>, <code>MOBILE</code>, or <code>BOTH</code> UI view for which to render the data."},{"location":"apis/tables/get/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/tables/get/#examples","title":"Examples","text":"FluentStandard <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    params := &amp;tableapi.TableItemRequestBuilderGetQueryParameters{\n        // Optional configurations\n    }\n\n    response, err := client.Now2().Table2(\"{TableName}\").ByID(\"{sysID}\").Get2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre> <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    pathParameters := map[string]string{\n        \"baseurl\": \"https://www.{instance}.service-now.com/api/now\",\n        \"table\":   \"incident\",\n        \"sysId\":   \"INC00000000\",\n    }\n\n    requestBuilder := tableapi.NewTableItemRequestBuilder2(client, pathParameters)\n\n    params := &amp;tableapi.TableItemRequestBuilderGetQueryParameters{\n        // Optional configurations\n    }\n\n    record, err := requestBuilder.Get2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process record\n}\n</code></pre>"},{"location":"apis/tables/list/","title":"List table records","text":""},{"location":"apis/tables/list/#overview","title":"Overview","text":"<p>Retrieves multiple records from the specified table.</p>"},{"location":"apis/tables/list/#path-parameters","title":"Path parameters","text":"Name Description <code>baseurl</code> The absolute base URI for the request (this is the same for all requests) including: the schema, the domain, and a path fragment. <code>table</code> The table name of for the operation."},{"location":"apis/tables/list/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>DisplayValue</code> <code>tableapi.DisplayValue</code> <code>TRUE</code>, <code>FALSE</code>, or <code>ALL</code> Determines the type of data returned, either the actual values from the database or the display values of the fields. <code>ExcludeReferenceLink</code> <code>bool</code> N/A Flag that indicates whether to exclude Table API links for reference fields. <code>Fields</code> <code>[]string</code> N/A List of fields to include in the response. <code>QueryNoDomain</code> <code>bool</code> N/A Flag that indicates whether to restrict the record search to only the domains configured for the logged in user. <code>View</code> <code>tableapi.View</code> <code>DESKTOP</code>, <code>MOBILE</code>, or <code>BOTH</code> UI view for which to render the data. <code>Limit</code> <code>int</code> N/A Maximum number of records to return. <code>NoCount</code> <code>bool</code> N/A Flag that indicates whether to return the number of rows in the associated table. <code>Offset</code> <code>int</code> N/A Starting record index for which to begin retrieving records. <code>Query</code> <code>string</code> N/A Encoded query used to filter the result set. <code>QueryCategory</code> <code>string</code> N/A Name of the category to use for queries. <code>SuppressPaginationHeader</code> <code>bool</code> N/A Flag that indicates whether to remove the Link header from the response."},{"location":"apis/tables/list/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/tables/list/#examples","title":"Examples","text":"FluentStandard <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    params := &amp;tableapi.TableRequestBuilderGetQueryParameters{\n        // Optional configurations\n    }\n\n    response, err := client.Now2().Table2(\"{TableName}\").Get2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre> <pre><code>package main\n\nimport (\n    \"context\"\n    \"log\"\n\n    tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n)\n\nfunc main() {\n    // Initialize credentials and client\n\n    pathParameters := map[string]string{\n        \"baseurl\": \"https://www.{instance}.service-now.com/api/now\",\n        \"table\":   \"incident\",\n    }\n\n    requestBuilder := tableapi.NewTableRequestBuilder2(client, pathParameters)\n\n    params := &amp;tableapi.TableRequestBuilderGetQueryParameters{\n        // Optional configurations\n    }\n\n    response, err := requestBuilder.Get2(context.Background(), params)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Process response\n}\n</code></pre>"},{"location":"apis/tables/update/","title":"Update table record","text":""},{"location":"apis/tables/update/#overview","title":"Overview","text":"<p>Updates the specified record by <code>sys_id</code> in the specified table.</p>"},{"location":"apis/tables/update/#path-parameters","title":"Path parameters","text":"Name Description <code>baseurl</code> The absolute base URI for the request (this is the same for all requests) including: the schema, the domain, and a path fragment. <code>table</code> The table name of for the operation. <code>sysId</code> The sys id of the table record."},{"location":"apis/tables/update/#optional-query-parameters","title":"Optional query parameters","text":"Name Type Possible values Description <code>DisplayValue</code> <code>tableapi.DisplayValue</code> <code>TRUE</code>, <code>FALSE</code>, or <code>ALL</code> Determines the type of data returned, either the actual values from the database or the display values of the fields. <code>ExcludeReferenceLink</code> <code>bool</code> N/A Flag that indicates whether to exclude Table API links for reference fields. <code>Fields</code> <code>[]string</code> N/A List of fields to include in the response. <code>InputDisplayValue</code> <code>bool</code> N/A Flag that indicates whether to set field values using the display value or the actual value. <code>QueryNoDomain</code> <code>bool</code> N/A Flag that indicates whether to restrict the record search to only the domains configured for the logged in user. <code>View</code> <code>tableapi.View</code> <code>DESKTOP</code>, <code>MOBILE</code>, or <code>BOTH</code> UI view for which to render the data."},{"location":"apis/tables/update/#required-query-parameters","title":"Required query parameters","text":"<p>N/A</p>"},{"location":"apis/tables/update/#examples","title":"Examples","text":"FluentStandard <pre><code>package main\n\n    import (\n        \"context\"\n\n        tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n    )\n\n    func main() {\n        // Initialize credentials and client\n\n        params := &amp;tableapi.TableItemRequestBuilderGetQueryParameters{\n            // Optional configurations\n        }\n\n        ctx := context.Background()\n\n        // data map of information you want to use for the new record\n        data := map[string]string{\n            \"short_description\": \"example incident\",\n            \"description\": \"incident created by servicenow-sdk-go\",\n        }\n\n        response, err := client.Now2().Table2(\"{TableName}\").Put3(ctx, data, params)\n        if err != nil {\n            log.Fatal(err)\n        }\n        // Process response\n    }\n</code></pre> <pre><code>    package main\n\n    import (\n        \"context\"\n\n        tableapi \"github.com/michaeldcanady/servicenow-sdk-go/table-api\"\n    )\n\n    func main() {\n        // Initialize credentials and client\n\n        pathParameters := {\n            \"baseurl\":\"https://www.{instance}.service-now.com/api/now\",\n            \"table\": \"incident\",\n            \"sysId\": \"INC00000000\",\n        }\n\n        requestBuilder := tableapi.NewTableItemRequestBuilder2(client, pathParameters)\n\n        // define parameters you wish to (optional)\n        params := &amp;tableapi.TableItemRequestBuilderGetQueryParameters{\n            // Optional configurations\n        }\n\n        data := map[string]string{\n            \"short_description\": \"example incident\",\n            \"description\": \"incident created by servicenow-sdk-go\",\n        }\n\n        record, err := requestBuilder.Put3(context.Background(), data, params)\n        if err != nil {\n            log.Fatal(err)\n        }\n\n        // Process response\n    }\n</code></pre>"},{"location":"contributing/","title":"Overview","text":""},{"location":"contributing/quick-start/","title":"Quick start","text":""},{"location":"contributing/quick-start/#getting-started","title":"Getting started","text":""},{"location":"contributing/quick-start/#prerequisites","title":"Prerequisites","text":""},{"location":"contributing/quick-start/#container-based","title":"Container-based","text":"<p>use a platform that supports the devcontainer spec.</p> <p>Examples:</p> <ul> <li>VSCode Devcontainers</li> <li>DevPods</li> <li>GitHub CodeSpaces</li> </ul>"},{"location":"contributing/quick-start/#local","title":"Local","text":""},{"location":"contributing/quick-start/#fork-and-clone-repository","title":"Fork and clone repository","text":"<ol> <li>Fork the Service-Now SDK for Go repository to your personal GitHub Account.</li> <li> <p>Clone the forked repository:</p> <pre><code>git clone https://github.com/YOUR-USERNAME/servicenow-sdk-go.git\n</code></pre> </li> <li> <p>Add the upstream remote for rebasing:</p> <pre><code>cd servicenow-sdk-go\ngit remote add upstream https://github.com/michaeldcanady/servicenow-sdk-go.git\n</code></pre> </li> </ol>"},{"location":"contributing/architecture/","title":"Overview","text":"<p>This document outlines the internal structure and interaction patterns within the SDK. The SDK simplifies api consumption by abstracting request composition, sending, and response handling behind a consistent and extendable <code>RequestBuilder</code> fa\u00e7ade.</p>"},{"location":"contributing/architecture/core-concepts/","title":"Core concepts","text":""},{"location":"contributing/architecture/core-concepts/#requestbuilder-facade","title":"<code>RequestBuilder</code> fa\u00e7ade","text":"<p>The <code>RequestBuilder</code> serves as a high-level interface for constructing and executing HTTP operations for a specific API path. At each path diversion (after the base URI) introduce a new <code>RequestBuilder</code>.</p> <p>Example: Absolute URI: <code>https://{instance}.service-now.com/api/now/{version}/table</code></p> <p>To generate the appropriate <code>RequestBuilder</code> types:</p> <ol> <li>Remove the shared base URI: Strip the common prefix <code>https://{instance}.service-now.com/api</code> to isolate the relative path <code>now/{version}/table</code>.</li> <li>Segment the relative path: Split the path by <code>/</code>, omitting the version segment. This yields two distinct <code>RequestBuilder</code> types:</li> <li><code>NowRequestBuilder</code></li> <li><code>TableRequestBuilder</code></li> </ol> <p>The base URI is <code>https://{instance}.service-now.com/api</code> Note: The SDK targets a single API version; exclude the version segment of the address.</p>"},{"location":"contributing/architecture/core-concepts/#requestbuilder-structure","title":"<code>RequestBuilder</code> structure","text":"<p>Each <code>RequestBuilder</code> provides methods aligned with supported HTTP operations. These methods accept standardized parameters or enable construction of the next path segment. Internally, they handle:</p> <ol> <li>Request construction: Dynamically builds the HTTP request, including headers, query parameters, and payload.</li> <li>Request transmission: Sends the request through an HTTP client, supporting features such as retries and logging.</li> <li>Response handling: Converts raw HTTP responses into structured SDK types or error classes.</li> </ol>"},{"location":"contributing/architecture/core-concepts/#batch-api-compatibility","title":"Batch API compatibility","text":"<p>All <code>RequestBuilder</code> types support batch operations using a shared convention: <code>ToXXXRequestInformation(\u2026) (RequestInformation, error)</code> methods.</p> <p>These methods generate lightweight <code>RequestInformation</code> objects that encapsulate:</p> <ul> <li>The HTTP method  </li> <li>Target address  </li> <li>Headers and query parameters  </li> <li>Request body (if applicable)</li> </ul> <p>This approach enables batch execution without immediate transmission, allowing deferred or grouped interactions.</p>"}]}